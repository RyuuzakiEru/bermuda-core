{
  "contractName": "MerkleTreeWithHistoryMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ubuntu/bermuda-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":\"MerkleTreeWithHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ubuntu/bermuda-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x3658683a6d1ce79f489c5ac77bdc60a82cca3c6f7d909db156622975d17cdffe\",\"urls\":[\"bzz-raw://31f7ee4ddcec3d3fca64ea26db518d4da3432ce9c37e5d2578e17b3aa8f9dc1f\",\"dweb:/ipfs/QmTPu6QaNaYJJkozfMiwG9fb1mZyS8vgL8SBtoQ2A4vjzX\"]},\"/home/ubuntu/bermuda-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x312301e4c45f6344d9e22fc82bd282d0fe1049574b7b5b6c69e4883b3f4670da\",\"urls\":[\"bzz-raw://ffeb2d0f89ba9ab544cad3a2642b28e915fab7a1a5c8dda822667094889b1395\",\"dweb:/ipfs/QmRhCosnje2aoxyrTdTFGZwy35FVgzYWSeJhfkU5VD4gB9\"]}},\"version\":1}",
  "bytecode": "0x6080604052600380546001600160401b031916905534801561002057600080fd5b50604051610bf4380380610bf48339818101604052602081101561004357600080fd5b50518063ffffffff81166100885760405162461bcd60e51b8152600401808060200182810382526027815260200180610b6b6027913960400191505060405180910390fd5b60208163ffffffff16106100cd5760405162461bcd60e51b8152600401808060200182810382526022815260200180610bb26022913960400191505060405180910390fd5b6000805463ffffffff191663ffffffff83161781556002805460018181019092557f021d1a3689ecc3d96c547d6a4af192ffea8c7d7cce688a4c2540907fcab46995600080516020610b2a8339815191529091018190558154808301835592829052600080516020610bd48339815191529092018290555b60005463ffffffff90811690821610156101b35761016c82806001600160e01b036101d316565b600280546001818101909255600080516020610b2a83398151915201829055805480820182556000829052600080516020610bd48339815191520182905590925001610145565b506101c781806001600160e01b036101d316565b600455506103b4915050565b6000600080516020610b928339815191528310610237576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020610b9283398151915282106102835760405162461bcd60e51b8152600401808060200182810382526021815260200180610b4a6021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b1580156102dd57600080fd5b505af41580156102f1573d6000803e3d6000fd5b505050506040513d604081101561030757600080fd5b5080516020909101519092509050600080516020610b92833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561037f57600080fd5b505af4158015610393573d6000803e3d6000fd5b505050506040513d60408110156103a957600080fd5b505195945050505050565b610767806103c36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ba70f7571161008c578063e829558811610066578063e8295588146101b7578063ec732959146101d4578063f178e47c146101dc578063fc7e9c6f146101f9576100cf565b8063ba70f7571461018a578063c2b40ae414610192578063cd87a3b4146101af576100cf565b80632d287e43146100d457806338bf282e146100f3578063414a37ba146101285780634ecf518b146101305780636d9833e31461015157806390eeb02b14610182575b600080fd5b6100f1600480360360208110156100ea57600080fd5b5035610201565b005b6101166004803603604081101561010957600080fd5b508035906020013561020e565b60408051918252519081900360200190f35b6101166103ef565b610138610401565b6040805163ffffffff9092168252519081900360200190f35b61016e6004803603602081101561016757600080fd5b503561040d565b604080519115158252519081900360200190f35b610138610480565b61011661048c565b610116600480360360208110156101a857600080fd5b50356104ac565b6101386104c0565b610116600480360360208110156101cd57600080fd5b50356104c5565b6101166104e3565b610116600480360360208110156101f257600080fd5b5035610507565b610138610514565b61020a81610528565b5050565b60006000805160206107138339815191528310610272576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b60008051602061071383398151915282106102be5760405162461bcd60e51b81526004018080602001828103825260218152602001806106f26021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b15801561031857600080fd5b505af415801561032c573d6000803e3d6000fd5b505050506040513d604081101561034257600080fd5b5080516020909101519092509050600080516020610713833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156103ba57600080fd5b505af41580156103ce573d6000803e3d6000fd5b505050506040513d60408110156103e457600080fd5b505195945050505050565b60008051602061071383398151915281565b60005463ffffffff1681565b60008161041c5750600061047b565b60035463ffffffff165b60048163ffffffff166064811061043957fe5b015483141561044c57600191505061047b565b63ffffffff811661045b575060645b6003546000199091019063ffffffff808316911614156104265760009150505b919050565b60035463ffffffff1681565b60035460009060049063ffffffff16606481106104a557fe5b0154905090565b600481606481106104b957fe5b0154905081565b606481565b600281815481106104d257fe5b600091825260209091200154905081565b7f021d1a3689ecc3d96c547d6a4af192ffea8c7d7cce688a4c2540907fcab4699581565b600181815481106104d257fe5b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a168114156105865760405162461bcd60e51b815260040180806020018281038252602f8152602001806106c3602f913960400191505060405180910390fd5b6003805463ffffffff64010000000080830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff908116908216101561065f576001851661061b5783925060028163ffffffff16815481106105e957fe5b906000526020600020015491508360018263ffffffff168154811061060a57fe5b60009182526020909120015561063f565b60018163ffffffff168154811061062e57fe5b906000526020600020015492508391505b610649838361020e565b9350600263ffffffff86160494506001016105b7565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff9081169290921790819055849160049116606481106106a157fe5b01555050600354640100000000900463ffffffff166000190194935050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e2062652061646465645f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a265627a7a72315820715c3dc534285a68c4dfabe51ad3c8e6873b58ce5a7a71449a6a2449045e108b64736f6c63430005110032405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5f72696768742073686f756c6420626520696e7369646520746865206669656c645f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000015f747265654c6576656c732073686f756c64206265206c657373207468616e203332b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ba70f7571161008c578063e829558811610066578063e8295588146101b7578063ec732959146101d4578063f178e47c146101dc578063fc7e9c6f146101f9576100cf565b8063ba70f7571461018a578063c2b40ae414610192578063cd87a3b4146101af576100cf565b80632d287e43146100d457806338bf282e146100f3578063414a37ba146101285780634ecf518b146101305780636d9833e31461015157806390eeb02b14610182575b600080fd5b6100f1600480360360208110156100ea57600080fd5b5035610201565b005b6101166004803603604081101561010957600080fd5b508035906020013561020e565b60408051918252519081900360200190f35b6101166103ef565b610138610401565b6040805163ffffffff9092168252519081900360200190f35b61016e6004803603602081101561016757600080fd5b503561040d565b604080519115158252519081900360200190f35b610138610480565b61011661048c565b610116600480360360208110156101a857600080fd5b50356104ac565b6101386104c0565b610116600480360360208110156101cd57600080fd5b50356104c5565b6101166104e3565b610116600480360360208110156101f257600080fd5b5035610507565b610138610514565b61020a81610528565b5050565b60006000805160206107138339815191528310610272576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b60008051602061071383398151915282106102be5760405162461bcd60e51b81526004018080602001828103825260218152602001806106f26021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b15801561031857600080fd5b505af415801561032c573d6000803e3d6000fd5b505050506040513d604081101561034257600080fd5b5080516020909101519092509050600080516020610713833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156103ba57600080fd5b505af41580156103ce573d6000803e3d6000fd5b505050506040513d60408110156103e457600080fd5b505195945050505050565b60008051602061071383398151915281565b60005463ffffffff1681565b60008161041c5750600061047b565b60035463ffffffff165b60048163ffffffff166064811061043957fe5b015483141561044c57600191505061047b565b63ffffffff811661045b575060645b6003546000199091019063ffffffff808316911614156104265760009150505b919050565b60035463ffffffff1681565b60035460009060049063ffffffff16606481106104a557fe5b0154905090565b600481606481106104b957fe5b0154905081565b606481565b600281815481106104d257fe5b600091825260209091200154905081565b7f021d1a3689ecc3d96c547d6a4af192ffea8c7d7cce688a4c2540907fcab4699581565b600181815481106104d257fe5b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a168114156105865760405162461bcd60e51b815260040180806020018281038252602f8152602001806106c3602f913960400191505060405180910390fd5b6003805463ffffffff64010000000080830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff908116908216101561065f576001851661061b5783925060028163ffffffff16815481106105e957fe5b906000526020600020015491508360018263ffffffff168154811061060a57fe5b60009182526020909120015561063f565b60018163ffffffff168154811061062e57fe5b906000526020600020015492508391505b610649838361020e565b9350600263ffffffff86160494506001016105b7565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff9081169290921790819055849160049116606481106106a157fe5b01555050600354640100000000900463ffffffff166000190194935050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e2062652061646465645f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a265627a7a72315820715c3dc534285a68c4dfabe51ad3c8e6873b58ce5a7a71449a6a2449045e108b64736f6c63430005110032",
  "sourceMap": "65:213:8:-;;;635:34:3;;;-1:-1:-1;;;;;;673:27:3;;;130:77:8;5:2:-1;;;;30:1;27;20:12;5:2;130:77:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;130:77:8;;851:15:3;;;843:67;;;;-1:-1:-1;;;843:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:2;924:11;:16;;;916:63;;;;-1:-1:-1;;;916:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:6;:20;;-1:-1:-1;;985:20:3;;;;;;;1059:5;27:10:-1;;-1:-1;23:18;;;45:23;;;334:75:3;-1:-1:-1;;;;;;;;;;;1059:23:3;;;;;;27:10:-1;;23:18;;;45:23;;1088:32:3;;;;-1:-1:-1;;;;;;;;;;;1088:32:3;;;;;;1127:175;1150:6;;;;;;1146:10;;;;1127:175;;;1185:39;1199:11;;-1:-1:-1;;;;;1185:13:3;:39;:::i;:::-;1232:5;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;;;;;;;;;;;1232:23:3;;;;27:10:-1;;23:18;;;45:23;;-1:-1;1263:32:3;;;-1:-1:-1;;;;;;;;;;;1263:32:3;;;;1171:53;;-1:-1:-1;1158:3:3;1127:175;;;-1:-1:-1;1319:39:3;1333:11;;-1:-1:-1;;;;;1319:13:3;:39;:::i;:::-;1308:5;:50;-1:-1:-1;65:213:8;;-1:-1:-1;;65:213:8;1435:445:3;1510:7;-1:-1:-1;;;;;;;;;;;1533:27:3;;1525:72;;;;;-1:-1:-1;;;1525:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1611:28:3;;1603:74;;;;-1:-1:-1;;;1603:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:23;;;-1:-1:-1;;;1743:23:3;;;;;;;;1683:9;1743:23;;;;;;;;1703:5;;1683:9;;1743:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;1743:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1743:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1743:23:3;;;;;;;;;-1:-1:-1;1743:23:3;-1:-1:-1;;;;;;;;;;;;1794:6:3;1783:1;1776:38;1772:42;;1829:6;:17;1847:1;1850;1829:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1829:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1829:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1829:23:3;;1435:445;-1:-1:-1;;;;;1435:445:3:o;65:213:8:-;;;;;;;",
  "deployedSourceMap": "65:213:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:213:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;211:65:8;;:::i;:::-;;1435:445:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1435:445:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;179:114;;;:::i;414:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2758:342;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2758:342:3;;:::i;:::-;;;;;;;;;;;;;;;;;;635:34;;;:::i;3146:93::-;;;:::i;754:39::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;754:39:3;;:::i;704:46::-;;;:::i;609:22::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;609:22:3;;:::i;297:112::-;;;:::i;574:31::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;574:31:3;;:::i;673:27::-;;;:::i;211:65:8:-;257:14;265:5;257:7;:14::i;:::-;;211:65;:::o;1435:445:3:-;1510:7;-1:-1:-1;;;;;;;;;;;1533:27:3;;1525:72;;;;;-1:-1:-1;;;1525:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1611:28:3;;1603:74;;;;-1:-1:-1;;;1603:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:23;;;-1:-1:-1;;;1743:23:3;;;;;;;;1683:9;1743:23;;;;;;;;1703:5;;1683:9;;1743:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;1743:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1743:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1743:23:3;;;;;;;;;-1:-1:-1;1743:23:3;-1:-1:-1;;;;;;;;;;;;1794:6:3;1783:1;1776:38;1772:42;;1829:6;:17;1847:1;1850;1829:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1829:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1829:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1829:23:3;;1435:445;-1:-1:-1;;;;;1435:445:3:o;179:114::-;-1:-1:-1;;;;;;;;;;;179:114:3;:::o;414:20::-;;;;;;:::o;2758:342::-;2814:4;2830:10;2826:43;;-1:-1:-1;2857:5:3;2850:12;;2826:43;2885:16;;;;2907:171;2931:5;2937:1;2931:8;;;;;;;;;;;2922:5;:17;2918:53;;;2958:4;2951:11;;;;;2918:53;2982:6;;;2978:52;;-1:-1:-1;747:3:3;2978:52;3060:16;;-1:-1:-1;;3037:3:3;;;;3060:16;3055:21;;;3060:16;;3055:21;;2907:171;;3090:5;3083:12;;;2758:342;;;;:::o;635:34::-;;;;;;:::o;3146:93::-;3217:16;;3189:7;;3211:5;;3217:16;;3211:23;;;;;;;;;3204:30;;3146:93;:::o;754:39::-;;;;;;;;;;;;;-1:-1:-1;754:39:3;:::o;704:46::-;747:3;704:46;:::o;609:22::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;609:22:3;:::o;297:112::-;334:75;297:112;:::o;574:31::-;;;;;;;;;;673:27;;;;;;;;;:::o;1884:802::-;1975:9;;1933:12;2025:6;;1933:12;;1975:9;;;;;;;;2025:6;;2021:1;2014:17;1998:33;;;;1990:93;;;;-1:-1:-1;;;1990:93:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:9;:14;;;;;;;;;2102:1;2089:14;;;;;-1:-1:-1;;2089:14:3;;;;;;2136:5;-1:-1:-1;;;2185:355:3;2208:6;;;;;;2204:10;;;;2185:355;;;2233:16;;;2229:225;;2273:16;2266:23;;2307:5;2313:1;2307:8;;;;;;;;;;;;;;;;;;2299:16;;2346;2326:14;2341:1;2326:17;;;;;;;;;;;;;;;;;;;:36;2229:225;;;2394:14;2409:1;2394:17;;;;;;;;;;;;;;;;;;2387:24;;2429:16;2421:24;;2229:225;2481:26;2495:4;2501:5;2481:13;:26::i;:::-;2462:45;-1:-1:-1;2532:1:3;2516:17;;;;;-1:-1:-1;2216:3:3;;2185:355;;;-1:-1:-1;2566:16:3;;747:3;;2565:42;2566:16;;;;:20;2565:42;2546:16;:61;;-1:-1:-1;;2546:61:3;2565:42;;;;2546:61;;;;;;;;;;;;2639:16;;2613:5;;2619:16;2613:23;;;;;;;;:42;-1:-1:-1;;2668:9:3;;;;;;;-1:-1:-1;;2668:13:3;;1884:802;-1:-1:-1;;;;1884:802:3:o",
  "source": "pragma solidity 0.5.17;\n\nimport '../MerkleTreeWithHistory.sol';\n\ncontract MerkleTreeWithHistoryMock is MerkleTreeWithHistory {\n\n  constructor (uint32 _treeLevels) MerkleTreeWithHistory(_treeLevels) public {}\n\n  function insert(bytes32 _leaf) public {\n      _insert(_leaf);\n  }\n}\n",
  "sourcePath": "/home/ubuntu/bermuda-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/bermuda-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithHistoryMock": [
        1649
      ]
    },
    "id": 1650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1626,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/ubuntu/bermuda-core/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1627,
        "nodeType": "ImportDirective",
        "scope": 1650,
        "sourceUnit": 1014,
        "src": "25:38:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1628,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1013,
              "src": "103:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$1013",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1629,
            "nodeType": "InheritanceSpecifier",
            "src": "103:21:8"
          }
        ],
        "contractDependencies": [
          1013
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1649,
        "linearizedBaseContracts": [
          1649,
          1013
        ],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1637,
              "nodeType": "Block",
              "src": "205:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1638,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1634,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1631,
                    "src": "185:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1635,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1633,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1013,
                  "src": "163:21:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$1013_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "163:34:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "143:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:20:8"
            },
            "returnParameters": {
              "id": 1636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "205:0:8"
            },
            "scope": 1649,
            "src": "130:77:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1647,
              "nodeType": "Block",
              "src": "249:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1644,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "265:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1643,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "257:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1646,
                  "nodeType": "ExpressionStatement",
                  "src": "257:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "227:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:15:8"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:8"
            },
            "scope": 1649,
            "src": "211:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1650,
        "src": "65:213:8"
      }
    ],
    "src": "0:279:8"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/bermuda-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithHistoryMock": [
        1649
      ]
    },
    "id": 1650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1626,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/ubuntu/bermuda-core/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1627,
        "nodeType": "ImportDirective",
        "scope": 1650,
        "sourceUnit": 1014,
        "src": "25:38:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1628,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1013,
              "src": "103:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$1013",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1629,
            "nodeType": "InheritanceSpecifier",
            "src": "103:21:8"
          }
        ],
        "contractDependencies": [
          1013
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1649,
        "linearizedBaseContracts": [
          1649,
          1013
        ],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1637,
              "nodeType": "Block",
              "src": "205:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1638,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1634,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1631,
                    "src": "185:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1635,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1633,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1013,
                  "src": "163:21:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$1013_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "163:34:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "143:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:20:8"
            },
            "returnParameters": {
              "id": 1636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "205:0:8"
            },
            "scope": 1649,
            "src": "130:77:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1647,
              "nodeType": "Block",
              "src": "249:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1644,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "265:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1643,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "257:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1646,
                  "nodeType": "ExpressionStatement",
                  "src": "257:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "227:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:15:8"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:8"
            },
            "scope": 1649,
            "src": "211:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1650,
        "src": "65:213:8"
      }
    ],
    "src": "0:279:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.18",
  "updatedAt": "2021-02-23T09:47:23.439Z",
  "devdoc": {
    "methods": {
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}